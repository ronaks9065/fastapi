name: CI/CD Pipeline

on:
  push:
    branches:
      - master

permissions:
  contents: read 
  id-token: write

jobs:
  build-and-push:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials via Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          role-session-name: github-actions-federation
          aws-region: ${{ secrets.AWS_REGION }}

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v3
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract Git commit SHA
        id: vars
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build Docker image with unique tag
        run: |
          docker build -t ${{ secrets.ECR_REPO_URI }}:${{ env.COMMIT_SHA }} backend/

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPO_URI }}:${{ env.COMMIT_SHA }}

  cd:
    name: CD
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Configure AWS credentials via Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ROLE }}
          role-session-name: github-actions-federation
          aws-region: ${{ secrets.AWS_REGION }}

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v3
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Clone private repository
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git clone https://$GH_TOKEN@github.com/ronaks9065/fastapi-manifests.git

      - name: Log backend.yaml content before update
        run: cat ./fastapi-manifests/manifests/backend.yaml
      
      - name: Update Kubernetes manifests with new image
        run: |
          sed -i'' -e "s|image:.*|image: ${{ secrets.ECR_REPO_URI }}:${{ env.COMMIT_SHA }}|" ./fastapi-manifests/manifests/backend.yaml
      
      - name: Log backend.yaml content after update
        run: cat ./fastapi-manifests/manifests/backend.yaml
      
      - name: Commit and push updated manifests
        run: |
          cd fastapi-manifests
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update image to ${{ secrets.ECR_REPO_URI }}:${{ env.COMMIT_SHA }}"
          git push origin master

      # - name: Apply Kubernetes manifests
      #   run: |
      #     kubectl apply -f ./fastapi-manifests/manifests
      #     kubectl get all -A
